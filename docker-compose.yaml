services:
  app:
    image: user-service
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_LIQUIBASE_ENABLED: true
      SPRING_LIQUIBASE_CHANGE-LOG: classpath:/db/changelog/changelog.xml
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "8080:8080"
  db:
    image: postgres:17.5-alpine3.22
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
  redis:
    image: redis:alpine3.21
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli -a $${REDIS_PASSWORD} ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
volumes:
  db-data:
  redis_data:
    driver: local